version: '3.8'

x-common-postgres: &common-postgres
  image: postgres:alpine
  environment:
    POSTGRES_USER: ${POSTGRES_USER}
    POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  networks:
    - app-network

x-common-app: &common-app
  depends_on:
    - token-service
  networks:
    - app-network
  environment:
    TOKEN_SERVICE_URL: http://token-service:3000

services:
  gateway:
    image: nginx:alpine
    container_name: gateway
    networks:
      - app-network
    depends_on:
      - auth-app
      - interviews-app
      - reports-app
      - frontend
    volumes:
      - ./components/nginx/conf.d/:/etc/nginx/conf.d/
    ports:
      - "80:80"
      - "443:443"

  auth-db:
    <<: *common-postgres
    container_name: 'auth-db-dev'
    environment:
      POSTGRES_DB: auth-dev

  interviews-db:
    <<: *common-postgres
    container_name: 'interviews-db-dev'
    environment:
      POSTGRES_DB: interviews-dev

  reports-db:
    <<: *common-postgres
    container_name: 'reports-db-dev'
    environment:
      POSTGRES_DB: reports-dev

  token-service:
    build:
      context: ./components/token-service/
      dockerfile: Dockerfile.dev
    networks:
      - app-network
    environment:
      JWT_SECRET: ${JWT_SECRET}
    volumes:
      - ./components/token-service:/app
      - /app/node_modules

  auth-app:
    <<: *common-app
    build:
      context: ./apps/auth/
      dockerfile: Dockerfile.dev
    volumes:
      - ./apps/auth:/app
      - /app/node_modules

  interviews-app:
    <<: *common-app
    build:
      context: ./apps/interviews/
      dockerfile: Dockerfile.dev
    depends_on:
      - rabbitmq
      - interviews-db
    environment:
      DATABASE_URL: postgres://postgres:postgres@interviews-db-dev/interviews-dev
      RABBIT_URL: amqp://rabbitmq:5672
    volumes:
      - ./apps/interviews:/app
      - /app/node_modules

  reports-app:
    <<: *common-app
    build:
      context: ./apps/reports/
      dockerfile: Dockerfile.dev
    depends_on:
      - rabbitmq
      - reports-db
    environment:
      DATABASE_URL: postgres://postgres:postgres@reports-db-dev/reports-dev
      RABBIT_URL: amqp://rabbitmq:5672
    volumes:
      - ./apps/reports:/app
      - /app/node_modules

  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile
    ports:
      - 24678:24678
    networks:
      - app-network
    environment:
      API_BASE_URL: ${API_BASE_URL}

volumes:
  authdb:
  interviewsdb:
  reportsdb:

networks:
  app-network:
