version: '3.8'
services:
  rabbitmq:
    networks:
      - default
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672
  gateway:
    image: nginx:alpine
    container_name: gateway
    networks:
      - default
    depends_on:
      - auth-app
      - interviews-app
      - reports-app
      - frontend
    volumes:
      - ./components/nginx/conf.d/:/etc/nginx/conf.d/
    ports:
      - "80:80"
      - "443:443"

  auth-db:
    networks:
      - default
    container_name: auth-db
    image: postgres:alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: auth
    volumes:
      - authdb:/var/lib/postgresql/data

  interviews-db:
    networks:
      - default
    container_name: interviews-db
    image: postgres:alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: interviews
    volumes:
      - interviewsdb:/var/lib/postgresql/data

  reports-db:
    networks:
      - default
    container_name: reports-db
    image: postgres:alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: reports
    volumes:
      - reportsdb:/var/lib/postgresql/data
  
  token-service:
    networks:
      - default
    build: ./components/token-service
    environment:
      - JWT_SECRET=this-is-a-very-secret-key-okay-asdjhjasjdhajkshdkjashdkj

  auth-app:
    networks:
      - default
    build: ./apps/auth
    depends_on:
      - auth-db
      - token-service
    links:
      - auth-db
    environment:
      - DATABASE_URL=postgres://postgres:postgres@auth-db/auth
      - TOKEN_SERVICE_URL=http://token-service:3000
  
  interviews-app:
    networks:
      - default
    build: ./apps/interviews
    depends_on:
      - interviews-db
      - token-service
      - rabbitmq
    links:
      - interviews-db
    environment:
      - DATABASE_URL=postgres://postgres:postgres@interviews-db/interviews
      - TOKEN_SERVICE_URL=http://token-service:3000
      - RABBIT_URL=amqp://rabbitmq:5672

  reports-app:
    networks:
      - default
    build: ./apps/reports
    depends_on:
      - reports-db
      - token-service
      - rabbitmq
    links:
      - reports-db
    environment:
      - DATABASE_URL=postgres://postgres:postgres@reports-db/reports
      - TOKEN_SERVICE_URL=http://token-service:3000
      - RABBIT_URL=amqp://rabbitmq:5672
  
  frontend: 
    networks:
      - default
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile
    environment:
      - API_BASE_URL=/api
    
volumes:
  authdb:
  interviewsdb:
  reportsdb:

networks:
  default:
